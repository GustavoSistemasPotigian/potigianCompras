/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modelos;

import BaseDeDatos.ConexionMySQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author usuario
 */
public class PlanVariable extends javax.swing.JFrame {

    /**
     * Creates new form PlanVariable
     */
    public PlanVariable() {
        initComponents();
        habilitar();
        inhabilitar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jlbProveedor = new javax.swing.JLabel();
        txtIdProveedor = new javax.swing.JTextField();
        jlbComprador = new javax.swing.JLabel();
        txtComprador = new javax.swing.JTextField();
        jlbRubro = new javax.swing.JLabel();
        txtRubro = new javax.swing.JTextField();
        jlbMotivoSNC = new javax.swing.JLabel();
        txtMotivoSNC = new javax.swing.JTextField();
        btnNuevoPlan = new javax.swing.JButton();
        btnConsultasPlan = new javax.swing.JButton();
        jcomProveedor = new javax.swing.JComboBox<>();
        jcomComprador = new javax.swing.JComboBox<>();
        jcomSector = new javax.swing.JComboBox<>();
        jcomMotivo = new javax.swing.JComboBox<>();
        jlbArticulo = new javax.swing.JLabel();
        txtArticulo = new javax.swing.JTextField();
        jcomArticulo = new javax.swing.JComboBox<>();
        jlbSucursal = new javax.swing.JLabel();
        txtSucursal = new javax.swing.JTextField();
        jcomSucursal = new javax.swing.JComboBox<>();
        jlbVigencia = new javax.swing.JLabel();
        txtFechaDesde = new javax.swing.JTextField();
        txtFechaHasta = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jlbAplicacion = new javax.swing.JLabel();
        jrbSemanal = new javax.swing.JRadioButton();
        jrbMensual = new javax.swing.JRadioButton();
        btnSeleccion = new javax.swing.JButton();
        jlbAccion = new javax.swing.JLabel();
        txtAccionComercial = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jlbDesde = new javax.swing.JLabel();
        jlbHasta = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PLAN IMPORTE VARIABLE");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Condiciones del Plan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jlbProveedor.setBackground(new java.awt.Color(51, 204, 0));
        jlbProveedor.setText("Proveedor:");

        txtIdProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdProveedorActionPerformed(evt);
            }
        });

        jlbComprador.setText("Comprador: ");

        txtComprador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompradorActionPerformed(evt);
            }
        });

        jlbRubro.setText("Rubro: ");

        txtRubro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRubroActionPerformed(evt);
            }
        });

        jlbMotivoSNC.setText("Motivo SNC:");

        txtMotivoSNC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotivoSNCActionPerformed(evt);
            }
        });

        btnNuevoPlan.setText("Nuevo Plan");
        btnNuevoPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPlanActionPerformed(evt);
            }
        });

        btnConsultasPlan.setText("Consultas");
        btnConsultasPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultasPlanActionPerformed(evt);
            }
        });

        jcomProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomProveedorActionPerformed(evt);
            }
        });

        jcomComprador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomCompradorActionPerformed(evt);
            }
        });

        jcomSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomSectorActionPerformed(evt);
            }
        });

        jcomMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomMotivoActionPerformed(evt);
            }
        });

        jlbArticulo.setText("Artículo:");

        txtArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArticuloActionPerformed(evt);
            }
        });

        jcomArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomArticuloActionPerformed(evt);
            }
        });

        jlbSucursal.setText("Sucursal:");

        txtSucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSucursalActionPerformed(evt);
            }
        });

        jcomSucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomSucursalActionPerformed(evt);
            }
        });

        jlbVigencia.setText("Vigencia Devengamiento:");

        txtFechaDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaDesdeActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlbAplicacion.setText("Aplicación:");

        jrbSemanal.setText("Semanal");
        jrbSemanal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbSemanalActionPerformed(evt);
            }
        });

        jrbMensual.setText("Mensual");
        jrbMensual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMensualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jrbSemanal)
                        .addGap(31, 31, 31)
                        .addComponent(jrbMensual))
                    .addComponent(jlbAplicacion))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jlbAplicacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbMensual)
                    .addComponent(jrbSemanal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSeleccion.setText("Seleccionar Articulos");
        btnSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionActionPerformed(evt);
            }
        });

        jlbAccion.setText("% Acción Comercial: ");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jlbDesde.setText("Desde");

        jlbHasta.setText("Hasta");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jlbAccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlbVigencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(jlbDesde)
                                        .addGap(85, 85, 85)
                                        .addComponent(jlbHasta))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtAccionComercial, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addComponent(txtFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(75, 75, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlbProveedor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlbRubro)
                                            .addComponent(jlbComprador)
                                            .addComponent(jlbSucursal)
                                            .addComponent(jlbArticulo))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtArticulo)
                                            .addComponent(txtSucursal)
                                            .addComponent(txtComprador)
                                            .addComponent(txtRubro))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcomArticulo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcomSector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcomComprador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcomSucursal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcomProveedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnSeleccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevoPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsultasPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlbMotivoSNC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMotivoSNC, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jcomMotivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(11, 11, 11)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevoPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultasPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbProveedor)
                    .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbComprador)
                    .addComponent(txtComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbRubro)
                    .addComponent(txtRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomSector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbSucursal)
                    .addComponent(txtSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbArticulo)
                    .addComponent(jcomArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jlbHasta))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlbVigencia, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jlbDesde)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbAccion)
                            .addComponent(txtAccionComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 21, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbMotivoSNC)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMotivoSNC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jcomMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(124, 124, 124)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeleccion)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalir))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //CLASE PARA LOS BOTONES
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        PlanVariable.this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        ///inhabilita las opciones y botones innecesarios.
        inhabilitar();

    }//GEN-LAST:event_btnCancelarActionPerformed
     String accion="Insertar";
    private void btnSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionActionPerformed

        //conexión a la bdd
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        ///FECHA ACTUAL
        java.util.Date date = new java.util.Date();
        java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
        String fecha = sdf.format(date);
        ///STRING A UTILIZAR
        String idProve="", tipoDePlan="",fechaActual="", sucursal="0", idComprador="",idRubro="";
        String motivoSNC="", idArt="0", fechaDesde="", fechaHasta="";
        String accionComercial="", tipoDeAplicacion="";
      // cantCopias="0"
        String sSQL="";
        String mensaje;
        ///campos a cargar
        idProve= txtIdProveedor.getText();
        tipoDePlan= "VARIABLE";
        fechaActual= fecha;              
        idComprador= txtComprador.getText();
        sucursal= txtSucursal.getText();
        idRubro= txtRubro.getText();
        motivoSNC= txtMotivoSNC.getText();
        fechaDesde= txtFechaDesde.getText();
        fechaHasta= txtFechaHasta.getText();
        accionComercial=txtAccionComercial.getText();
        
        if (this.jrbMensual.isSelected()==true){
             tipoDeAplicacion="Mensual";
                     }
        else{
            if (this.jrbSemanal.isSelected()==true){
                tipoDeAplicacion="Semanal";}
               }
       idArt=null; 
        
        ///creamos la consulta sql
         if (accion.equals("Insertar"))
        {
            sSQL="INSERT INTO plan_descuento (Proveedor_idproveedor, tipo_plan,fechaActual,"
                    + "Usuario_idusuario,Sucursal_idSucursal,Sector_idsector,Motivo_SNC_idMotivo_SNC,"
                    + "fecha_Devengamiento_Desde, fecha_Devengamiento_Hasta, accion_comercial, aplicacion,Articulo_idArticulo) "+
                "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
           mensaje="Operación Satisfactoria";
        }
        try 
        {
            PreparedStatement pst= cn.prepareStatement(sSQL);
            pst.setString(1, idProve );
            pst.setString(2, tipoDePlan);
            pst.setString(3, fechaActual);
            pst.setString(4, idComprador);
            pst.setString(5, sucursal);
            pst.setString(6, idRubro);
            pst.setString(7, motivoSNC);
            pst.setString(8, fechaDesde);
            pst.setString(9, fechaHasta);
            pst.setString(10,accionComercial);
            pst.setString(11,tipoDeAplicacion);
            pst.setString(12,idArt);
           
            int n = pst.executeUpdate();
            
            if (n>0)
            {    
                mensaje="Operación Satisfactoria";
                
                JOptionPane.showMessageDialog(null, mensaje);
               
                habilitar();//habilita los campos para la carga de datos
                inhabilitar();
              SeleccionArticulosVariables ventanaArticulos= new SeleccionArticulosVariables();
             ventanaArticulos.setExtendedState(JFrame.MAXIMIZED_BOTH);
            ventanaArticulos.setVisible(true);

            }
            
            
            
            
        } 
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
       
    }//GEN-LAST:event_btnSeleccionActionPerformed
///**JRADIOBOTTON DE LAS OPCIONES MENSUALES O SEMANALES
    private void jrbMensualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMensualActionPerformed
        if (jrbSemanal.isEnabled()== false){
            jrbSemanal.setEnabled(true);
        }
        else {
            jrbSemanal.setEnabled(false);
        }
    }//GEN-LAST:event_jrbMensualActionPerformed

    private void jrbSemanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbSemanalActionPerformed
        ///HABILITAMOS EL BOTON SEMANAL Y DESELECCIONAMOS EL MENSUAL.
        if (jrbMensual.isEnabled()== false){
            jrbMensual.setEnabled(true);
        }
        else {
            jrbMensual.setEnabled(false);
        }

    }//GEN-LAST:event_jrbSemanalActionPerformed

    /***ZONA DE TXTFIELD Y JCOMBOX**/
    private void txtFechaDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaDesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaDesdeActionPerformed

    private void txtSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSucursalActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", idSucursal="";
        idSucursal= txtSucursal.getText();

        sSQL= "select descripcion from sucursal where idSucursal LIKE '%"+idSucursal+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            if (rs.next() == false)
            {
                String mensaje="La Sucursal no existe";
                JOptionPane.showMessageDialog(null, mensaje);

            }
            else
            {
                this.jcomSucursal.removeAllItems();
                this.jcomSucursal.addItem(rs.getString("descripcion"));
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_txtSucursalActionPerformed

    private void jcomArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomArticuloActionPerformed
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", articulo="";
        articulo=(String) jcomArticulo.getSelectedItem();

        sSQL= "select idarticulo as id from articulo where descripcion LIKE '%"+articulo+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);

            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtArticulo.setText(rs.getString("id"));
            }

        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jcomArticuloActionPerformed

    private void txtArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArticuloActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", idArt="";
        idArt= txtArticulo.getText();

        sSQL= "select descripcion from articulo where idarticulo LIKE '%"+idArt+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            if (rs.next() == false)
            {
                String mensaje="El Articulo no existe";
                JOptionPane.showMessageDialog(null, mensaje);

            }
            else
            {
                this.jcomArticulo.removeAllItems();
                this.jcomArticulo.addItem(rs.getString("descripcion"));
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_txtArticuloActionPerformed

    private void jcomMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomMotivoActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", motivo="";
        motivo=(String) jcomMotivo.getSelectedItem();

        sSQL= "select idmotivo_snc as id from motivo_snc where descripcion LIKE '%"+motivo+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);

            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtMotivoSNC.setText(rs.getString("id"));
            }

        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jcomMotivoActionPerformed

    private void jcomSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomSectorActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", secDescr="";
        secDescr=(String) jcomSector.getSelectedItem();

        sSQL= "select idSector as id from sector where descripcion LIKE '%"+secDescr+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);

            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtRubro.setText(rs.getString("id"));
            }

        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jcomSectorActionPerformed

    private void jcomCompradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomCompradorActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", comprador="";
        comprador=(String) jcomComprador.getSelectedItem();

        sSQL= "select usr.idusuario as id from usuario as usr where CONCAT (usr.apellido,\" \",usr.nombre) LIKE '%"+comprador+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);

            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtComprador.setText(rs.getString("id"));

            }

        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jcomCompradorActionPerformed

    private void jcomProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomProveedorActionPerformed

        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", razon="";
        razon=(String) jcomProveedor.getSelectedItem();

        sSQL= "select pr.idproveedor as id from proveedor as pr where pr.razon_social LIKE '%"+razon+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);

            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtIdProveedor.setText(rs.getString("id"));
                this.jcomArticulo.removeAllItems();
                jcomClaseArticulo();

            }
           // jcomProveedor.transferFocus();
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jcomProveedorActionPerformed

    private void btnConsultasPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultasPlanActionPerformed
        ConsultaVariables ventanaConsulta= new ConsultaVariables();
        ventanaConsulta.setExtendedState(JFrame.MAXIMIZED_BOTH);
        ventanaConsulta.setVisible(true);
    }//GEN-LAST:event_btnConsultasPlanActionPerformed

    private void btnNuevoPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPlanActionPerformed
        ///// HABILITA TODOS LOS PUNTOS NUEVAMENTE
        habilitar();
    }//GEN-LAST:event_btnNuevoPlanActionPerformed

    private void txtMotivoSNCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotivoSNCActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", idMotiv="";
        idMotiv= txtMotivoSNC.getText();

        sSQL= "select descripcion from motivo_snc where idmotivo_snc LIKE '%"+idMotiv+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            if (rs.next() == false)
            {
                String mensaje="El Motivo no existe";
                JOptionPane.showMessageDialog(null, mensaje);

            }
            else
            {
                this.jcomMotivo.removeAllItems();
                this.jcomMotivo.addItem(rs.getString("descripcion"));
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_txtMotivoSNCActionPerformed

    private void txtRubroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRubroActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", idSec="";
        idSec= txtRubro.getText();

        sSQL= "select descripcion from sector where idsector LIKE '%"+idSec+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            if (rs.next() == false)
            {
                String mensaje="el Sector no existe";
                JOptionPane.showMessageDialog(null, mensaje);

            }
            else
            {
                this.jcomSector.removeAllItems();
                this.jcomSector.addItem(rs.getString("descripcion"));
            }

        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_txtRubroActionPerformed

    private void txtCompradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompradorActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", idComp="";
        idComp= txtComprador.getText();

        sSQL= "select concat (apellido,\" \", nombre) as comprador from usuario where idusuario LIKE '%"+idComp+"%'";
        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            if (rs.next() == false)
            {
                String mensaje="el Comprador no existe";
                JOptionPane.showMessageDialog(null, mensaje);

            }
            else
            {
                this.jcomComprador.removeAllItems();
                this.jcomComprador.addItem(rs.getString("comprador"));
            }
            txtComprador.transferFocus();
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_txtCompradorActionPerformed

    private void txtIdProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdProveedorActionPerformed
        ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", idProv="";
        idProv= txtIdProveedor.getText();

        sSQL= "select pr.razon_social as razon from proveedor as pr where pr.idproveedor LIKE '%"+idProv+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            if (rs.next() == false)
            {
                String mensaje="el proveedor no existe";
                JOptionPane.showMessageDialog(null, mensaje);

            }
            else
            {
                this.jcomProveedor.removeAllItems();
                this.jcomProveedor.addItem(rs.getString("razon"));
                this.jcomArticulo.removeAllItems();
                jcomClaseArticulo();
            }

            txtIdProveedor.transferFocus();
        }

        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_txtIdProveedorActionPerformed

    private void jcomSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomSucursalActionPerformed
      ///realizamos la conexion con la bdd.

        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();

        ///ingresamos la consulta
        String sSQL="", sucursal="";
        sucursal=(String) jcomSucursal.getSelectedItem();

        sSQL= "select idSucursal as id from sucursal where descripcion LIKE '%"+sucursal+"%'";

        try
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);

            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtSucursal.setText(rs.getString("id"));
            }

        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jcomSucursalActionPerformed


    
    
        /////////////////////////////////////////////////////////////////////////////
    //////////////CLASES PARA HABILITAR E INHABILITAR LOS MENUS//////////////////
    /////////////////////////////////////////////////////////////////////////////
    void habilitar(){
       
       ///Habilitar los botones.
       btnConsultasPlan.setEnabled(true);
       btnCancelar.setEnabled(true);
       btnNuevoPlan.setEnabled(true);
       btnSalir.setEnabled(true);
       btnSeleccion.setEnabled(true);
       
        ///Habilitar los jCOMBOX
       jcomArticulo.setEnabled(true);
       jcomComprador.setEnabled(true);
       jcomMotivo.setEnabled(true);
       jcomProveedor.setEnabled(true);
       jcomSector.setEnabled(true);
       jcomSucursal.setEnabled(true);
       
       ///Habilitar las etiquetas.
       jlbAccion.setEnabled(true);
       jlbAplicacion.setEnabled(true);
       jlbArticulo.setEnabled(true);
       jlbComprador.setEnabled(true);
      
       jlbDesde.setEnabled(true);
       jlbHasta.setEnabled(true);
       jlbMotivoSNC.setEnabled(true);
       jlbProveedor.setEnabled(true);
       jlbRubro.setEnabled(true);
       jlbSucursal.setEnabled(true);
       jlbVigencia.setEnabled(true);
       
       ///Habilitar Radio botones
       jrbMensual.setEnabled(true);
       jrbSemanal.setEnabled(true);
       
       ///Habilitar los TEXTFIELD
       txtAccionComercial.setEnabled(true);
       txtArticulo.setEnabled(true);
       txtComprador.setEnabled(true);
       txtFechaDesde.setEnabled(true);
       txtFechaHasta.setEnabled(true);
       txtIdProveedor.setEnabled(true);
       txtMotivoSNC.setEnabled(true);
       txtRubro.setEnabled(true);
       txtSucursal.setEnabled(true);
        
       txtIdProveedor.requestFocus();///posiciona el cursor
        
         //vacia los campos en ""
        txtIdProveedor.setText("");   
        txtComprador.setText("");
        txtIdProveedor.setText("");
        txtRubro.setText("");
        txtMotivoSNC.setText("");
        txtSucursal.setText("");
        txtArticulo.setText(null);
        
    
        this.jcomProveedor.removeAllItems();
        this.jcomComprador.removeAllItems();
        this.jcomMotivo.removeAllItems();
        this.jcomSector.removeAllItems();
        this.jcomSucursal.removeAllItems();
         
         
        ///Actualizamos los menus
        jcomClaseProveedorMenu();
        jcomClaseCompradorMenu();
        jcomClaseSectorMenu();
        jcomClaseMotivoMenu();
        jcomClaseArticulo();
        jcomClaseSucursal();
        
    }
    
    
    void inhabilitar(){
       
       ///Habilitar los botones.
       //btnConsultasPlan.setEnabled(false);
       btnCancelar.setEnabled(false);
       //btnNuevoPlan.setEnabled(false);
       //btnSalir.setEnabled(false);
       btnSeleccion.setEnabled(false);
       
        ///Habilitar los jCOMBOX
       jcomArticulo.setEnabled(false);
       jcomComprador.setEnabled(false);
       jcomMotivo.setEnabled(false);
       jcomProveedor.setEnabled(false);
       jcomSector.setEnabled(false);
       jcomSucursal.setEnabled(false);
       
       ///Habilitar las etiquetas.
       jlbAccion.setEnabled(false);
       jlbAplicacion.setEnabled(false);
       jlbArticulo.setEnabled(false);
       jlbComprador.setEnabled(false);
      
       jlbDesde.setEnabled(false);
       jlbHasta.setEnabled(false);
       jlbMotivoSNC.setEnabled(false);
       jlbProveedor.setEnabled(false);
       jlbRubro.setEnabled(false);
       jlbSucursal.setEnabled(false);
       jlbVigencia.setEnabled(false);
       
        ///Habilitar Radio botones
       jrbMensual.setEnabled(false);
       jrbSemanal.setEnabled(false);
       
        ///Habilitar los TEXTFIELD
        
        txtAccionComercial.setEnabled(false);
        txtArticulo.setEnabled(false);
        txtComprador.setEnabled(false);
        
        txtFechaDesde.setEnabled(false);
        txtFechaHasta.setEnabled(false);
        txtIdProveedor.setEnabled(false);
        txtMotivoSNC.setEnabled(false);
        txtRubro.setEnabled(false);
        txtSucursal.setEnabled(false);
        
        ///Habilitar 
        //vacia los campos en ""
        txtIdProveedor.setText("");   
        txtComprador.setText("");
        txtIdProveedor.setText("");
        txtRubro.setText("");
        txtMotivoSNC.setText("");
       
        txtSucursal.setText("");
        txtArticulo.setText(null);
        
        
            }
    ////*Clases para actualizar los menús*////
     private void jcomClaseProveedorMenu()
    {
        ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "SELECT razon_social FROM proveedor";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomProveedor.addItem(rs.getString("razon_social"));
                
            }            
                        
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
    
    }
     private void jcomClaseCompradorMenu()
    {
       ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "select concat (apellido,\" \", nombre) as comprador from usuario";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomComprador.addItem(rs.getString("comprador")); 
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }      
    
    }
    private void jcomClaseSectorMenu()
      {
        
        ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "select descripcion from sector";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomSector.addItem(rs.getString("descripcion")); 
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }      
      }
    private void jcomClaseMotivoMenu()
    {
        ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "select descripcion from motivo_snc";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomMotivo.addItem(rs.getString("descripcion")); 
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
    }
         private void jcomClaseArticulo(){
        
         ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        String idProv=txtIdProveedor.getText();
        
        
        sSQL= "select descripcion from articulo where articulo.proveedor_idproveedor like  '%"+idProv+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomArticulo.addItem(rs.getString("descripcion")); 
                
            }   
            
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    private void jcomClaseSucursal(){
        
        ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        String idSuc=txtSucursal.getText();
        
        
        sSQL= "select descripcion from sucursal where sucursal.idSucursal like  '%"+idSuc+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomSucursal.addItem(rs.getString("descripcion")); 
                
            }   
            
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    
    
    
    
    
    
    
    
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlanVariable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlanVariable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlanVariable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlanVariable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlanVariable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConsultasPlan;
    private javax.swing.JButton btnNuevoPlan;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSeleccion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JComboBox<String> jcomArticulo;
    private javax.swing.JComboBox<String> jcomComprador;
    private javax.swing.JComboBox<String> jcomMotivo;
    private javax.swing.JComboBox<String> jcomProveedor;
    private javax.swing.JComboBox<String> jcomSector;
    private javax.swing.JComboBox<String> jcomSucursal;
    private javax.swing.JLabel jlbAccion;
    private javax.swing.JLabel jlbAplicacion;
    private javax.swing.JLabel jlbArticulo;
    private javax.swing.JLabel jlbComprador;
    private javax.swing.JLabel jlbDesde;
    private javax.swing.JLabel jlbHasta;
    private javax.swing.JLabel jlbMotivoSNC;
    private javax.swing.JLabel jlbProveedor;
    private javax.swing.JLabel jlbRubro;
    private javax.swing.JLabel jlbSucursal;
    private javax.swing.JLabel jlbVigencia;
    private javax.swing.JRadioButton jrbMensual;
    private javax.swing.JRadioButton jrbSemanal;
    private javax.swing.JTextField txtAccionComercial;
    private javax.swing.JTextField txtArticulo;
    private javax.swing.JTextField txtComprador;
    private javax.swing.JTextField txtFechaDesde;
    private javax.swing.JTextField txtFechaHasta;
    private javax.swing.JTextField txtIdProveedor;
    private javax.swing.JTextField txtMotivoSNC;
    private javax.swing.JTextField txtRubro;
    private javax.swing.JTextField txtSucursal;
    // End of variables declaration//GEN-END:variables
}
